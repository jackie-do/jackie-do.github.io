{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023-06-01-react-road-to-enterprise-part-01/","result":{"data":{"site":{"siteMetadata":{"title":"Jackie's Blog"}},"markdownRemark":{"id":"bdbec74a-cef8-5347-8a68-0af8151d5698","excerpt":"Related posts Project Structure api assets components hooks context layout config constants helpers i18n services store styles types views Related posts Part…","html":"<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#related-posts\">Related posts</a></p>\n</li>\n<li>\n<p><a href=\"#project-structure\">Project Structure</a></p>\n<ul>\n<li><a href=\"#api\">api</a></li>\n<li><a href=\"#assets\">assets</a></li>\n<li><a href=\"#components\">components</a></li>\n<li><a href=\"#hooks\">hooks</a></li>\n<li><a href=\"#context\">context</a></li>\n<li><a href=\"#layout\">layout</a></li>\n<li><a href=\"#config\">config</a></li>\n<li><a href=\"#constants\">constants</a></li>\n<li><a href=\"#helpers\">helpers</a></li>\n<li><a href=\"#i18n\">i18n</a></li>\n<li><a href=\"#services\">services</a></li>\n<li><a href=\"#store\">store</a></li>\n<li><a href=\"#styles\">styles</a></li>\n<li><a href=\"#types\">types</a></li>\n<li><a href=\"#views\">views</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"related-posts\" style=\"position:relative;\"><a href=\"#related-posts\" aria-label=\"related posts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related posts</h2>\n<blockquote>\n<ol>\n<li>Part 1 - A pretty good ReactJS structure</li>\n<li><a href=\"#\">Part 2 - API Layer and Managing Async Operations</a></li>\n</ol>\n</blockquote>\n<h2 id=\"project-structure\" style=\"position:relative;\"><a href=\"#project-structure\" aria-label=\"project structure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project Structure</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">src\n<span class=\"token operator\">|</span>-- api\n<span class=\"token operator\">|</span>-- assets\n    <span class=\"token operator\">|</span>-- fonts\n    <span class=\"token operator\">|</span>-- images\n<span class=\"token operator\">|</span>-- components\n    <span class=\"token operator\">|</span>-- common\n        <span class=\"token operator\">|</span>-- button\n            <span class=\"token operator\">|</span>-- Button.tsx\n        <span class=\"token operator\">|</span>-- form\n            <span class=\"token operator\">|</span>-- TextField.tsx\n            <span class=\"token operator\">|</span>-- FieldLabel.tsx\n        <span class=\"token operator\">|</span>-- text\n            <span class=\"token operator\">|</span>-- Typography.tsx\n            <span class=\"token operator\">|</span>-- Headline.tsx\n    <span class=\"token operator\">|</span>-- transitions\n<span class=\"token operator\">|</span>-- hooks\n<span class=\"token operator\">|</span>-- context\n<span class=\"token operator\">|</span>-- layout\n<span class=\"token operator\">|</span>-- config\n<span class=\"token operator\">|</span>-- constants\n<span class=\"token operator\">|</span>-- helpers\n<span class=\"token operator\">|</span>-- i18n <span class=\"token punctuation\">(</span>optional<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">|</span>-- services\n<span class=\"token operator\">|</span>-- store\n<span class=\"token operator\">|</span>-- styles\n<span class=\"token operator\">|</span>-- types\n<span class=\"token operator\">|</span>-- views\n    <span class=\"token operator\">|</span>-- products\n        <span class=\"token operator\">|</span>-- components\n            <span class=\"token operator\">|</span>-- productForm\n                <span class=\"token operator\">|</span>-- ProductForm.tsx\n                <span class=\"token operator\">|</span>-- productFormService.ts\n                <span class=\"token operator\">|</span>-- productFormUtils.ts\n        <span class=\"token operator\">|</span>-- helpers\n            <span class=\"token operator\">|</span>-- productUtils.ts\n        <span class=\"token operator\">|</span>-- services\n            <span class=\"token operator\">|</span>-- productService.ts\n        <span class=\"token operator\">|</span>-- ViewProduct\n            <span class=\"token operator\">|</span>-- components\n                <span class=\"token operator\">|</span>-- ProductImage.tsx\n                <span class=\"token operator\">|</span>-- ProductDetails.tsx\n            <span class=\"token operator\">|</span>-- views\n                <span class=\"token operator\">|</span>-- BasicProductDetails.tsx\n                <span class=\"token operator\">|</span>-- AdvancedProductDetails.tsx\n            <span class=\"token operator\">|</span>-- ViewProduct.tsx\n        <span class=\"token operator\">|</span>-- Products.tsx\n        <span class=\"token operator\">|</span>-- AddProduct.tsx\n        <span class=\"token operator\">|</span>-- EditProduct.tsx\n        <span class=\"token operator\">|</span>-- DeleteProduct.tsx</code></pre></div>\n<h3 id=\"api\" style=\"position:relative;\"><a href=\"#api\" aria-label=\"api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>api</h3>\n<p>First, we have the <code class=\"language-text\">api</code> folder, which will contain the API Layer of our application. It will have methods\nthat are responsible for performing API requests and communicating with a server.</p>\n<h3 id=\"assets\" style=\"position:relative;\"><a href=\"#assets\" aria-label=\"assets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>assets</h3>\n<p>The <code class=\"language-text\">assets</code> folder contains <code class=\"language-text\">fonts</code> and <code class=\"language-text\">images</code> . In the <code class=\"language-text\">fonts</code> , you can keep any custom fonts\nand typefaces. In <code class=\"language-text\">images</code> store any pictures used throughout the application.</p>\n<h3 id=\"components\" style=\"position:relative;\"><a href=\"#components\" aria-label=\"components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>components</h3>\n<p>The <code class=\"language-text\">common</code> directory will contain any reusable components that are commonly used throughout the application. For instance, buttons, form components, components related to typography, and so on. Any components that are not as common would be placed inside of <code class=\"language-text\">components</code> but outside of the <code class=\"language-text\">common</code> directory.</p>\n<h3 id=\"hooks\" style=\"position:relative;\"><a href=\"#hooks\" aria-label=\"hooks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>hooks</h3>\n<p>The <code class=\"language-text\">hooks</code> directory, as the name suggests, would hold any custom and reusable hooks. Note that any\nhooks that are not really reusable, but are coupled to a specific feature, should be placed in the same\ndirectory as that feature.</p>\n<p>For instance, imagine we have a newsletter form component that contains a form to sign up a user for a newsletter. This component could utilise a hook called <code class=\"language-text\">useNewsletterSignup</code> that would handle signing up a user. A hook like this shouldn’t be placed in the global <code class=\"language-text\">src/hooks</code> directory, but rather locally, as it is coupled to the <code class=\"language-text\">NewsletterForm</code> component. Here’s what it could look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">src\n<span class=\"token operator\">|</span>-- hooks\n<span class=\"token operator\">|</span>-- components\n    <span class=\"token operator\">|</span>-- common\n        <span class=\"token operator\">|</span>-- NewsletterForm\n            <span class=\"token operator\">|</span>-- hooks\n                <span class=\"token operator\">|</span>-- useNewsletterSignup.ts\n            <span class=\"token operator\">|</span>-- NewsletterForm.tsx</code></pre></div>\n<p>It’s best to keep logic that is coupled as closely as possible to where it is used. This way, we will not\nunnecessarily add more code into the global\nhooks folder that should contain only reusable hooks.\nThe same applies to other functionality, such as helpers, services, etc.</p>\n<h3 id=\"context\" style=\"position:relative;\"><a href=\"#context\" aria-label=\"context permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>context</h3>\n<p>The <code class=\"language-text\">context</code> directory should contain any global-level context state providers.</p>\n<h3 id=\"layout\" style=\"position:relative;\"><a href=\"#layout\" aria-label=\"layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>layout</h3>\n<p><code class=\"language-text\">layout</code> directory, as the name suggests, should have components that provide different layouts for your pages. For example, if you are building a dashboard application, you could render different layouts\ndepending on if a user is logged in or not.</p>\n<h3 id=\"config\" style=\"position:relative;\"><a href=\"#config\" aria-label=\"config permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>config</h3>\n<p>In the <code class=\"language-text\">config</code> directory, you can put any runtime config files for your application and third-party\nservices. For instance, if you use a service like Firebase or OIDC for authentication, you will need to add\nconfiguration files and use them in your app. Just make sure not to confuse config with environmental\nvariables, as anything that goes here will be present in the build bundle.</p>\n<h3 id=\"constants\" style=\"position:relative;\"><a href=\"#constants\" aria-label=\"constants permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constants</h3>\n<p>Here you can put any constant variables that are used throughout the application. It’s a good practice\nto capitalise your constants to distinguish them from other variables and localised constants in your app.\nBelow are some examples of defining and using constants.</p>\n<blockquote>\n<p>Define constants separately</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// in constants/appConstants.ts</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">APP_NAME</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Super app'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">WIDGETS_LABEL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Widgets'</span>\n<span class=\"token comment\">// Somewhere in your app</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">APP_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">WIDGETS_LABEL</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/constants/appConstants'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APP_NAME</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// You can also grab all named exports from the file</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">APP_CONSTANTS</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/constants/appConstants'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APP_CONSTANTS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WIDGETS_LABEL</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>Define related constants in one object</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// in constants/appConstants.ts</span>\n<span class=\"token comment\">// Create an object with constant values</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> apiStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">IDLE</span><span class=\"token operator\">:</span> <span class=\"token string\">'IDLE'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">PENDING</span><span class=\"token operator\">:</span> <span class=\"token string\">'PENDING'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">SUCCESS</span><span class=\"token operator\">:</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">ERROR</span><span class=\"token operator\">:</span> <span class=\"token string\">'ERROR'</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Somewhere in your app</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> apiStatus <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/constants/appConstants'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>apiStatus<span class=\"token punctuation\">.</span><span class=\"token constant\">PENDING</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"helpers\" style=\"position:relative;\"><a href=\"#helpers\" aria-label=\"helpers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>helpers</h3>\n<p>Any utilities and small reusable functions should go here - for example, functions to format date, time, etc.</p>\n<h3 id=\"i18n\" style=\"position:relative;\"><a href=\"#i18n\" aria-label=\"i18n permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>i18n</h3>\n<p>This directory is optional. Add it if an application requires internalisation support. Intl, also known as\ni18n, is about displaying the content of an app in a format appropriate to the user’s locale. This content\ncan include but not be limited to translated text or specific format of dates, time, and currency. For instance, whilst the UK uses DD/MM/YYYY format, the US uses MM/DD/YYYY.</p>\n<h3 id=\"services\" style=\"position:relative;\"><a href=\"#services\" aria-label=\"services permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>services</h3>\n<p>In larger applications, we might have complex business logic code that is used in a few different places.\nA code like this is a good candidate to be extracted from components and placed somewhere else, and the <code class=\"language-text\">services</code> folder is a good candidate for that.</p>\n<h3 id=\"store\" style=\"position:relative;\"><a href=\"#store\" aria-label=\"store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>store</h3>\n<p>The <code class=\"language-text\">store</code> folder is responsible for files related to global state management. There are many state\nmanagement solutions that can be used for React projects, such as Redux, Zustand, Jotai, and many many more.</p>\n<h3 id=\"styles\" style=\"position:relative;\"><a href=\"#styles\" aria-label=\"styles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>styles</h3>\n<p>You can put global styles, variables, theme styles, and overrides in the <code class=\"language-text\">styles</code> folder.</p>\n<h3 id=\"types\" style=\"position:relative;\"><a href=\"#types\" aria-label=\"types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>types</h3>\n<p>Here you can put any global and shareable types.</p>\n<h3 id=\"views\" style=\"position:relative;\"><a href=\"#views\" aria-label=\"views permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>views</h3>\n<p><em>Usually</em>, the <code class=\"language-text\">views</code> directory only contains route/page components. For example, if we have a page\nthat is supposed to allow users to view products, we would have a component <code class=\"language-text\">Products.tsx</code> in the <code class=\"language-text\">views</code> folder, and the corresponding route could be something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/projects<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Products</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>There is a reason why I said “usually”, though. Many applications have route components in the views, and the rest of the components for it are placed in the components folder. This approach can work\nfor small to medium applications but is much harder to manage and maintain when the number of pages\nand components grows.</p>\n<p>In the <code class=\"language-text\">views</code> folder example mentioned above, we have a <code class=\"language-text\">Products</code> view. Imagine you are working\non an admin dashboard for an e-commerce app. A user should be able to browse products, select a\nproduct to see more details about it, as well as add, update, and delete it. The question is, how all of\nthis should be handled? The first thought might be to do it in the same way as we added the <code class=\"language-text\">Products</code>\nview.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/products<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Products</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/product/:id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ViewProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/add-product<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AddProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/edit-product/:id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EditProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/delete-product/:id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DeleteProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>Our views directory would now contain:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">views\n<span class=\"token operator\">|</span>-- Products.tsx\n<span class=\"token operator\">|</span>-- ViewProduct.tsx\n<span class=\"token operator\">|</span>-- AddProduct.tsx\n<span class=\"token operator\">|</span>-- EditProduct.tsx\n<span class=\"token operator\">|</span>-- DeleteProduct.tsx</code></pre></div>\n<p>Just for the <em>product</em> feature, we have five new files. Now imagine we have ten or more features that\nrequire CRUD functionality. We could quickly end up with a massive amount of files, and it would soon\nbecome a pain to manage. Therefore, let’s do it differently ==> Instead of keeping <em>Product</em> files at the top of the <code class=\"language-text\">views</code> folder, we will group them by a feature name. Let’s put all the files in the folder called <code class=\"language-text\">products</code> .</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">views\n<span class=\"token operator\">|</span>-- products\n    <span class=\"token operator\">|</span>-- Products.tsx\n    <span class=\"token operator\">|</span>-- ViewProduct.tsx\n    <span class=\"token operator\">|</span>-- AddProduct.tsx\n    <span class=\"token operator\">|</span>-- EditProduct.tsx\n    <span class=\"token operator\">|</span>-- DeleteProduct.tsx</code></pre></div>\n<p>All files that are related to the <code class=\"language-text\">product</code> feature are now kept together. Thanks to that, finding and\nmanaging route components should be much easier. We can also change routes config to follow a similar\npattern and define product-related routes as children of the <code class=\"language-text\">products</code> path.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/products<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">index</span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Products</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>add<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AddProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>:id/edit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EditProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>:id/delete<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DeleteProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>:id<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">element</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ViewProduct</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>As shown in the example above, we don’t use any component for the /products path but instead nest\nall the product routes. Here is an example of which component would be rendered for provided URLs:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">• /products - <span class=\"token operator\">&lt;</span>Products /<span class=\"token operator\">></span>\n• /products/add - <span class=\"token operator\">&lt;</span>AddProduct /<span class=\"token operator\">></span>\n• /products/1/edit - <span class=\"token operator\">&lt;</span>EditProduct /<span class=\"token operator\">></span>\n• /products/1/delete - <span class=\"token operator\">&lt;</span>DeleteProduct /<span class=\"token operator\">></span>\n• /products/1 - <span class=\"token operator\">&lt;</span>ViewProduct /<span class=\"token operator\">></span></code></pre></div>\n<p>Here is an example of how Link components could look like for each path.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/products<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Browse Products</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/products/2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">View Product</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/products/add<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Add Product</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/products/2/edit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Edit Product</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/products/2/delete<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete Product</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">// Dynamic link</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/products/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>product<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/edit</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Edit Product</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","frontmatter":{"title":"React - Road to enterprise - Part 1 - A pretty good ReactJS structure","date":"June 01, 2023","description":"A pretty good ReactJS structure"}},"previous":{"fields":{"slug":"/2023-03-07-set-up-ftp-connection-on-aws-ec2/"},"frontmatter":{"title":"Set up FTP connection on AWS EC2"}},"next":{"fields":{"slug":"/2023-06-10-final-test-performance-test-for-api/"},"frontmatter":{"title":"AB Benchmarking Tool - Test performance cho API"}}},"pageContext":{"id":"bdbec74a-cef8-5347-8a68-0af8151d5698","previousPostId":"9ea8ecd3-c77f-5e60-a4eb-714d500dcf73","nextPostId":"223c6388-9632-58b5-aa06-8b89c06ed3ee"}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}