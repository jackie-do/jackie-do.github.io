{"version":3,"file":"component---src-pages-index-js-5ce60c2999087ee1e1d5.js","mappings":"kOAmBA,MAhBmBA,IAAe,IAAd,KAAEC,GAAMD,EAC1B,MAAME,EAAWD,EAAKE,KAAIC,GACDA,EAAIC,QAAQ,IAAK,OAI1C,OACEC,EAAAA,cAAA,OAAKC,UAAU,kBACXL,EAASC,KAAI,CAACK,EAASC,IAChBH,EAAAA,cAAA,KAAGI,IAAKD,EAAOF,UAAU,WAAWI,KAAI,SAAWH,GAAaA,KAGrE,ECuDV,MA7DkBR,IAAwB,IAAAY,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUd,EACnC,MAAMe,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,QAAK,QACzCC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENhB,EAAAA,cAACiB,EAAAA,EAAM,CAACT,SAAUA,EAAUI,MAAOH,GACjCT,EAAAA,cAACkB,EAAAA,EAAG,CAACN,MAAM,cACXZ,EAAAA,cAACmB,EAAAA,EAAG,MACJnB,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACiB,EAAAA,EAAM,CAACT,SAAUA,EAAUI,MAAOH,GACjCT,EAAAA,cAACkB,EAAAA,EAAG,CAACN,MAAM,cACXZ,EAAAA,cAACmB,EAAAA,EAAG,MACJnB,EAAAA,cAAA,MAAIoB,MAAO,CAAEC,UAAW,SACrBR,EAAMhB,KAAIyB,IACT,MAAMV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KAC9C9B,EAAO2B,EAAKC,YAAY5B,KAE9B,OACEK,EAAAA,cAAA,MAAII,IAAKkB,EAAKE,OAAOC,MACnBzB,EAAAA,cAAA,WACEC,UAAU,iBACVyB,WAAS,EACTC,SAAS,6BAET3B,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAAC4B,EAAAA,KAAI,CAACC,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,OACnC9B,EAAAA,cAAA,QAAM8B,SAAS,YAAYlB,KAG/BZ,EAAAA,cAAA,aAAQsB,EAAKC,YAAYQ,OAE3B/B,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEgC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYW,aAAeZ,EAAKa,SAE/CL,SAAS,iBAIb9B,EAAAA,cAACoC,EAAU,CAACzC,KAAMA,KAEjB,KAIJ,C","sources":["webpack://gatsby-starter-blog/./src/components/tags_of_post.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\n// import { siteMetadata } from \"../../gatsby-config\"\n\nconst TagsOfPost = ({ tags }) => {\n  const tagNames = tags.map(tag => {\n    let convertedTagName = tag.replace(' ', '-')\n    return convertedTagName\n  })\n\n  return (\n    <div className=\"tag__container\">\n      { tagNames.map((tagName, index) => {\n        return <a key={index} className=\"tag-item\" href={`/tags/${tagName}`}>{ tagName }</a>\n      })\n      }\n    </div>\n  )\n}\n\nexport default TagsOfPost","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n// Import components\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport TagsOfPost from \"../components/tags_of_post\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const tags = post.frontmatter.tags\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n\n                <TagsOfPost tags={tags}/>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","tags","tagNames","map","tag","replace","React","className","tagName","index","key","href","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","Layout","Seo","Bio","style","listStyle","post","frontmatter","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","TagsOfPost"],"sourceRoot":""}