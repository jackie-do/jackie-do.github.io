{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023-10-13-new-features-in-rails-2023-you-may-not-know/","result":{"data":{"site":{"siteMetadata":{"title":"Jackie's Blog"}},"markdownRemark":{"id":"9ddc531c-d566-5960-9a36-cef1b012b363","excerpt":"Giới thiệu I. Sử dụng query filters với ActiveRecord thông thường 1. Sử dụng thông thường 2. Khi các query filters là optional II. Sử dụng query objects cho các…","html":"<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#gi%E1%BB%9Bi-thi%E1%BB%87u\">Giới thiệu</a></p>\n</li>\n<li>\n<p><a href=\"#i-s%E1%BB%AD-d%E1%BB%A5ng-query-filters-v%E1%BB%9Bi-activerecord-th%C3%B4ng-th%C6%B0%E1%BB%9Dng\">I. Sử dụng query filters với ActiveRecord thông thường</a></p>\n<ul>\n<li><a href=\"#1-s%E1%BB%AD-d%E1%BB%A5ng-th%C3%B4ng-th%C6%B0%E1%BB%9Dng\">1. Sử dụng thông thường</a></li>\n<li><a href=\"#2-khi-c%C3%A1c-query-filters-l%C3%A0-optional\">2. Khi các query filters là optional</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#ii-s%E1%BB%AD-d%E1%BB%A5ng-query-objects-cho-c%C3%A1c-domain-specific-queries\">II. Sử dụng query objects cho các domain-specific queries</a></p>\n<ul>\n<li><a href=\"#1-xxx\">1. xxx</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"giới-thiệu\" style=\"position:relative;\"><a href=\"#gi%E1%BB%9Bi-thi%E1%BB%87u\" aria-label=\"giới thiệu permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Giới thiệu</h2>\n<p>Trong bài post hôm nay chúng ta sẽ làm quen với cách sử dụng <code class=\"language-text\">Query Object</code> pattern trong Rails.\n<code class=\"language-text\">Query Object</code> thường được sử dụng để đóng gói các logic cho việc query database, việc sử dụng pattern này sẽ khiến tăng khả năng tái sử dung (reusable), có khả năng kết hợp với các query objects khác (composable), và chuẩn hóa được các parameters đầu vào (parameterizable unit)</p>\n<h2 id=\"i-sử-dụng-query-filters-với-activerecord-thông-thường\" style=\"position:relative;\"><a href=\"#i-s%E1%BB%AD-d%E1%BB%A5ng-query-filters-v%E1%BB%9Bi-activerecord-th%C3%B4ng-th%C6%B0%E1%BB%9Dng\" aria-label=\"i sử dụng query filters với activerecord thông thường permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>I. Sử dụng query filters với ActiveRecord thông thường</h2>\n<h3 id=\"1-sử-dụng-thông-thường\" style=\"position:relative;\"><a href=\"#1-s%E1%BB%AD-d%E1%BB%A5ng-th%C3%B4ng-th%C6%B0%E1%BB%9Dng\" aria-label=\"1 sử dụng thông thường permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Sử dụng thông thường</h3>\n<p>Trong Rails, với sự giúp đỡ của ActiveRecord model ta có thể dễ dàng sử dụng các built-in methods để tạo các database queries dễ dàng như</p>\n<blockquote>\n<p>Ví dụ 1: Query thông thường</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">Company\n  <span class=\"token punctuation\">.</span>joins<span class=\"token punctuation\">(</span><span class=\"token symbol\">:contracts</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span><span class=\"token symbol\">province</span><span class=\"token operator\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Ho Chi Minh\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span><span class=\"token symbol\">contracts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token symbol\">size_level</span><span class=\"token operator\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Big\"</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Nếu chúng ta sử dụng câu query ở trên khắp nơi trong app của chúng ta, khi chúng ta cần sửa đổi province hay level thì chúng ta phải cập nhật tất cả mọi nơi, như vậy sẽ rất tốn thời gian.\nCách fix đơn giản nhất là sử dụng các class methods cho việc tái sử dụng và nhận các tham số</p>\n<blockquote>\n<p>Ví dụ 2: Refactor để có các class methods hỗ trợ</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Cập nhật trong model</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Company</span> <span class=\"token operator\">&lt;</span> ApplicationRecord\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">by_province</span></span><span class=\"token punctuation\">(</span>province<span class=\"token punctuation\">)</span>\n    where<span class=\"token punctuation\">(</span><span class=\"token symbol\">province</span><span class=\"token operator\">:</span> province<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">by_size_level</span></span><span class=\"token punctuation\">(</span>size_level<span class=\"token punctuation\">)</span>\n    joins<span class=\"token punctuation\">(</span><span class=\"token symbol\">:contracts</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span><span class=\"token symbol\">contracts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token symbol\">size_level</span><span class=\"token operator\">:</span> size_level <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token comment\"># ...</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># Khi sử dụng</span>\nCompany\n  <span class=\"token punctuation\">.</span>by_province<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Ho Chi Minh\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span>by_size_level<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Big\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"2-khi-các-query-filters-là-optional\" style=\"position:relative;\"><a href=\"#2-khi-c%C3%A1c-query-filters-l%C3%A0-optional\" aria-label=\"2 khi các query filters là optional permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Khi các query filters là optional</h3>\n<p>Khi các query filters là optional thì ta phải cập nhật code lại</p>\n<blockquote>\n<p>Ví dụ 3: giả sử filter <code class=\"language-text\">by_province</code> là optional</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">by_province</span></span><span class=\"token punctuation\">(</span>province<span class=\"token punctuation\">)</span>\n    where<span class=\"token punctuation\">(</span><span class=\"token symbol\">province</span><span class=\"token operator\">:</span> province<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> province<span class=\"token punctuation\">.</span>present<span class=\"token operator\">?</span>\n  <span class=\"token keyword\">end</span></code></pre></div>\n<p>Nếu chúng ta cập nhật code như ví dụ 3 thì các filters của chúng ta không thể “chain” được (không thể gọi nối tiếp nhau vì method trả về nil nếu province không tồn tại).\nVấn đề này sẽ tự động được giải quyết nếu chúng ta sử dụng built-in method <code class=\"language-text\">scope</code> của ActiveRecord. Khi một scope trả về nil thì nó tự động chuyển đổi thành 1 giá trị khác để đảm bảo khả năng chainability của các scope.</p>\n<blockquote>\n<p>Ví dụ 4: Sử dụng scope thay vì class method</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Company</span> <span class=\"token operator\">&lt;</span> ApplicationRecord\n  scope <span class=\"token symbol\">:by_province</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>province<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> where<span class=\"token punctuation\">(</span><span class=\"token symbol\">province</span><span class=\"token operator\">:</span> province<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> province<span class=\"token punctuation\">.</span>present<span class=\"token operator\">?</span> <span class=\"token punctuation\">}</span>\n  scope <span class=\"token symbol\">:by_size_level</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>size_level<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> size_level<span class=\"token punctuation\">.</span>present<span class=\"token operator\">?</span>\n      joins<span class=\"token punctuation\">(</span><span class=\"token symbol\">:contracts</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span><span class=\"token symbol\">contracts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token symbol\">size_level</span><span class=\"token operator\">:</span> size_level <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\"># ...</span>\n<span class=\"token keyword\">end</span>\n</code></pre></div>\n<h2 id=\"ii-sử-dụng-query-objects-cho-các-domain-specific-queries\" style=\"position:relative;\"><a href=\"#ii-s%E1%BB%AD-d%E1%BB%A5ng-query-objects-cho-c%C3%A1c-domain-specific-queries\" aria-label=\"ii sử dụng query objects cho các domain specific queries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>II. Sử dụng query objects cho các domain-specific queries</h2>\n<p>Code của chúng ta đã cải thiện phần nào kể từ ví dụ đầu tiên, nhưng kết quẻ cuối cùng vẫn còn vài chỗ  “bốc mùi” (smells).</p>\n<ul>\n<li>\n<p>Bởi vì toàn bộ là chainable queries nên chúng thường được sử dụng cùng nhau. It’s a chainable query, so it’s very likely that our filters will always be used together; we want to make sure our filters are tested in the same combinations they will actually be used in production, but no proper encapsulation exists;</p>\n</li>\n<li>\n<p>Our filters are optional; the logic to skip a filter is very specific and may not make sense in the general context of our ServiceOffering model. If we reuse a scope like that, we may inadvertently introduce a bug in our application if we’re not counting with the possibility of blank filters;</p>\n</li>\n<li>\n<p>We are joining with other tables, which feels outside of our model’s responsibility; whenever our query spans more than one table or reaches a certain complexity threshold, it’s a sign we could represent it with a query object.</p>\n</li>\n</ul>\n<h3 id=\"1-xxx\" style=\"position:relative;\"><a href=\"#1-xxx\" aria-label=\"1 xxx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. xxx</h3>\n<p><a href=\"https://thoughtbot.com/blog/a-case-for-query-objects-in-rails\">https://thoughtbot.com/blog/a-case-for-query-objects-in-rails</a></p>","frontmatter":{"title":"Query Objects In Rails","date":"September 05, 2023","description":"Using query object design pattern in Rails"}},"previous":{"fields":{"slug":"/2023-08-13-action-cable-with-reactjs-part-2/"},"frontmatter":{"title":"Action Cable in Rails work with ReactJS - Part 2"}},"next":{"fields":{"slug":"/2023-09-05-query-object-design-pattern-in-rails/"},"frontmatter":{"title":"New features in Rails 2023 you may not know"}}},"pageContext":{"id":"9ddc531c-d566-5960-9a36-cef1b012b363","previousPostId":"0e947c37-e393-5bba-8bfa-00895e9ac363","nextPostId":"115285ba-e1e4-585b-b7fc-3df75a89d02a"}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}